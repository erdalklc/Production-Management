
@model int
@using EPM.Core.Models;
@{
    var editable = new EPM.Core.Helpers.MenuHelper().CanUserEditUretim(this.Context);
}
<div class="dx-card wide-card">
    @(Html.DevExtreme().DataGrid<EPM.Core.FormModels.Uretim.DetailList> ().ID("edgridDetail")
    .ShowBorders(false)
    //.DataSource(ob=>ob.Array().Data(Model).Key("ID"))
    .DataSource(
        ob=>ob.Mvc()
        .Controller("Uretim").LoadParams(new { HEADER_ID =Model})
        .LoadAction("UretimOnayliDetailLoad")
        .UpdateAction("UretimOnayliDetailUpdate")
        .DeleteAction("UretimOnayliDetailDelete")
        .InsertAction("UretimOnayliDetailInsert")
        .Key("ID")
    )
    .OnExporting("exportingDetail")
    .Export(e =>
    {
        e.Enabled(true);
    })
    .RemoteOperations(true)
    .FilterRow(f => f.Visible(true))
    .FocusedRowEnabled(true)
    .FocusedRowIndex(0)
    .ColumnAutoWidth(true)
    .ColumnChooser(ch => { ch.Mode(GridColumnChooserMode.Select); ch.Enabled(true); })
    .ShowRowLines(true)
    .ShowColumnLines(true)
    .ColumnHidingEnabled(false)
    .Editing(ob=>ob.Mode(GridEditMode.Cell).StartEditAction(GridStartEditAction.DblClick).AllowUpdating(editable).AllowDeleting(editable).AllowAdding(editable))
    .Paging(ob => ob.PageSize(50).Enabled(true))
    .Height("calc(100vh - 200px)")
    .ShowBorders(true)
    .Summary(ob=>ob.TotalItems(items=> {
    items.AddFor(m => m.QUANTITY).Alignment(HorizontalAlignment.Right).SummaryType(SummaryType.Sum).CustomizeText(@<text>function(data){return data.value}</text>);
        items.AddFor(m => m.EXPECTED_COST).Alignment(HorizontalAlignment.Right).SummaryType(SummaryType.Avg).CustomizeText(@<text>function(data){return "ORT:" +data.value}</text>);
        items.AddFor(m => m.REALESED_COST).Alignment(HorizontalAlignment.Right).SummaryType(SummaryType.Avg).CustomizeText(@<text>function(data){return "ORT:" +data.value}</text>);
    }))
    .Columns(columns => {

        columns.Add().Width(60).Type(GridCommandColumnType.Buttons).Buttons(btn => {
            btn.Add().Icon("fa fa-history").OnClick("LogSearchDetail");
            btn.Add().Name(GridColumnButtonName.Delete);
        });
        columns.AddFor(m => m.ID).Visible(false).AllowEditing(false).AllowExporting(true);
        columns.AddFor(m => m.HEADER_ID).SetCellValue(@<text> function(e){ return @Model}</text>).Visible(false).AllowExporting(true);
        columns.AddFor(m => m.MARKET).Lookup(look => look.DataSource(d => d.Mvc().Controller("Uretim").LoadAction("GetMarkets").Key("ID").LoadParams(new { all = false })).DisplayExpr("ADI").ValueExpr("ID")).AllowExporting(true);
        columns.AddFor(m => m.PRODUCT_SIZE).AllowExporting(true);
        columns.AddFor(m => m.QUANTITY).AllowEditing(true).AllowExporting(true);
        columns.AddFor(m => m.EXPECTED_COST).Visible(false).AllowExporting(true);
        columns.AddFor(m => m.REALESED_COST).Visible(false).AllowExporting(true);
        columns.AddFor(m => m.CURRENCY_UNIT).Width(80).Lookup(look => look.DataSource(d => d.Mvc().Controller("Uretim").LoadAction("GetCurrencyUnits").Key("ID")).DisplayExpr("CURRENCY_UNIT").ValueExpr("ID")).Visible(false).AllowExporting(true);
    }).OnInitNewRow(@<text> function(e) { e.data.HEADER_ID =@Model ; }</text>)
    )
</div>

