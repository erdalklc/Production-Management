
@functions{
    string GetUrl(string action) => Url.Action(action);
    string GetCurrentUrl() => Url.Action(ViewContext.RouteData.Values["action"].ToString());
    bool IsCurrentUrl(string pageName) => GetUrl(pageName) == GetCurrentUrl();
}
@{ 
    List<EPM.Core.Models.Menu> menuData = new EPM.Core.Helpers.MenuHelper().GetMenuList(this.Context);

    foreach (var item in menuData)
    {
        if (item.ACTION != null)
        {

            item.SELECTED = IsCurrentUrl(item.ACTION);
            if (item.SELECTED)
            {
                if (item.CATEGORY_ID != 0)
                {

                    EPM.Core.Models.Menu menu = menuData.Find(ob => ob.ID == item.CATEGORY_ID);
                    menu.ISEXPANDED = true;
                } 
            }
        }
        else item.SELECTED = false;
    }
}
@(Html.DevExtreme().TreeView()
                //.DataSource(ob=>ob.Mvc().LoadAction("GetMenuList").Controller("Home")) 
                .DataSource(menuData)
                .DataSourceOptions(ob=>ob.Map("mapTreeView"))
                .ExpandEvent(TreeViewExpandEvent.Click)
                .SelectionMode(NavSelectionMode.Single)
                .KeyExpr("ID")
                .ParentIdExpr("CATEGORY_ID")
                .SelectedExpr("SELECTED")
                .ExpandedExpr("ISEXPANDED") 
                .DisplayExpr("TEXT")
                .DataStructure(TreeViewDataStructure.Plain)
                .Width(220)
                .OnItemClick("EPM_Web.onTreeViewItemClick")
            )