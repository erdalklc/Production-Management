 @{
    bool canEditPlan = Convert.ToBoolean(ViewData["CanEditPlan"]);
    string sCanEditPlan = "false";
    if(canEditPlan)
    {
        sCanEditPlan = "true";
    }
}

<div id="form-container">
    @(Html.Partial("_PartialYuklemePlanUyum"))
    
        <div id="popupDetay"></div>
</div>
 
<script>
    function GetYear() { 
        return jQuery("[name=edYear]").val();
    }

    function GetGroup() { 
        return jQuery("[name=edProductGroup]").val();
    }
    var datax = null;
    function Chart_Clicked(WEEK_VALUE,SERIES_NAME) {
        var data = {
            BAND: GetGroup(),
            YEAR: GetYear(),
            WEEK: WEEK_VALUE 
        };
        getLoadPanelInstance().show();  
        if(SERIES_NAME=="ÜRETİM GERÇEKLEŞEN"){
               $.ajax({
            type: "POST",
            url: '@Url.Action("_PartialGetUretimGerceklesenListByChart", "UretimPlan")',
            data: data,
            contentType: 'application/x-www-form-urlencoded',
            async: true,
            success: function (income, status, xmlRequest) {
                var formData = JSON.parse(income);

                var popupOptions = {
                    contentTemplate: function () {
                      
                        return  "<div id='edReport' style='height:calc(100vh - 100px)'></div>";
                    },
                    width: function () { return "1200px"; },
                    height: function () { return "calc(100% - 20px)"; },
                    showTitle: true,
                    title: GetYear()+" - "+WEEK_VALUE +". HAFTA ÜRETM GERÇEKLEŞEN DETAY",
                    dragEnabled: true,
                    closeOnOutsideClick: true,
                    onContentReady: function () {
                        try {  
                            $("#edReport").dxDataGrid({
                            dataSource: formData,
                            keyExpr: "ROW_ID",
                            loadPanel: {
                                enabled: true
                            },columnChooser: {
                                enabled: true
                            }, export: {
                                enabled: true
                            },
                            remoteOperations: false,
                            columns:[
                               {
                                    dataField:"MODEL_ADI",
                                    caption:"MODEL"
                               },
                               {
                                    dataField:"RENK_ADI",
                                    caption:"RENK"
                               },
                               {
                                    dataField:"BEDEN_ADI",
                                    caption:"BEDEN"
                               },
                               {
                                    dataField:"SEZON_ADI",
                                    caption:"SEZON"
                               },
                               {
                                    dataField:"PAZAR_ADI",
                                    caption:"PAZAR"
                               },
                               {
                                    dataField:"SIPARIS_TIPI",
                                    caption:"SİPARİŞ TİPİ"
                               },
                               {
                                    dataField:"KESIM_FOYU_NO",
                                    caption:"KESİM FÖYÜ NO"
                               },
                               {
                                    dataField:"START_WEEK",
                                    caption:"HAFTA"
                               },
                               {
                                    dataField:"START_YEAR",
                                    caption:"YIL"
                               },
                               {
                                    dataField:"MIKTAR",
                                    caption:"MİKTAR"
                               }

                            ],
                            paging: {
                                pageSize: 100
                            },
                            sorting: {
                                mode: "multiple"
                            },summary: {
                              totalItems: [{
                                column: 'MIKTAR',
                                summaryType: 'sum',
                                displayFormat: '{0}'
                              }],
                            },
                            filterRow: {
                                visible: true,
                                applyFilter: "auto"
                            },
                            headerFilter: { visible: true },
                            focusedRowEnabled: true,
                            focusedRowIndex: 0,
                            focusedColumnIndex: 0 ,
                            showColumnLines: true,
                            showRowLines: true,
                            rowAlternationEnabled: true,
                            showBorders: true,
                            columnMinWidth: 80,
                            showBorders: true,
                        }).dxDataGrid("instance"); 
                } catch (e) { }
                    }

                };

                $("#popupDetay").dxPopup(popupOptions).dxPopup("instance").show(); 


            }
            , beforeSend: function () { 
            }


        }).always(function () {
            getLoadPanelInstance().hide();
        });
        }
        else if(SERIES_NAME=="PLAN TOPLAM"){ 
             $.ajax({
            type: "POST",
            url: '@Url.Action("_PartialGetPlanListByChart", "UretimPlan")',
            data: data,
            contentType: 'application/x-www-form-urlencoded',
            async: true,
            success: function (income, status, xmlRequest) {
                var formData = JSON.parse(income).DATA;
                var YEARS = JSON.parse(income).YEARS;
                var COLUMNNAMES = JSON.parse(income).COLUMNNAMES;
                console.log(formData);
                var popupOptions = {
                    contentTemplate: function () {
                      
                        return  "<div id='edReport' style='height:calc(100vh - 100px)'></div>";
                    },
                    width: function () { return "calc(100% - 20px)"; },
                    height: function () { return "calc(100% - 20px)"; },
                    showTitle: true,
                    title: GetYear()+" - "+WEEK_VALUE +". HAFTA YÜKLEME PLAN DETAY",
                    dragEnabled: true,
                    closeOnOutsideClick: true,
                    onContentReady: function () { 
                        try { $("#edReport").dxDataGrid({
                    dataSource: formData,
                    keyExpr: "ROW_ID",
                    loadPanel: {
                        enabled: true
                    },columnChooser: {
                        enabled: true
                    }, export: {
                        enabled: true
                    },
                    remoteOperations: false
                    
                    ,paging: {
                        pageSize: 100
                    },onSelectionChanged(e) {
                      e.component.refresh(true);
                    },
                    sorting: {
                        mode: "multiple"
                    },summary: {recalculateWhileEditing: true,
                      totalItems: [{
                        column: 'PLANSIZ_ADET',
                        name:"PLANSIZADETTOPLAM",
                        summaryType: 'custom',
                        displayFormat: '{0}'
                      },
                      {
                        column: 'URETIM_ADET',
                        summaryType: 'sum',
                        displayFormat: '{0}'
                      },
                      {
                        column: 'PLANLANAN_ADET',
                        summaryType: 'sum',
                        displayFormat: '{0}'
                      }],
                          calculateCustomSummary(options) {
                            if (options.name === 'PLANSIZADETTOPLAM') {
                              if (options.summaryProcess === 'start') {
                                options.totalValue = 0;
                              }
                              if (options.summaryProcess === 'finalize') { 
                                var total=0;
                                 for(var i=0;i <formData.length;i++)
                                    total +=(parseFloat(formData[i].URETIM_ADET)-parseFloat(formData[i].PLANLANAN_ADET));
                                    options.totalValue=total; 
                              }
                            }
                          },	
                    },
                    filterRow: {
                        visible: true,
                        applyFilter: "auto"
                    },
                    headerFilter: { visible: true },
                    editing: {
                        mode: "cell",
                        allowUpdating: @sCanEditPlan
                    } , customizeColumns: function (columns) {
                        for (var i = 0; i < YEARS.length; i++) {
                            columns.push({
                                caption: YEARS[i].YEAR,
                                isBand: true
                            });

                            for (var a = 0; a < columns.length - 1; a++) {
                                if (a < 18) {
                                    columns[a].fixed = true;
                                    columns[a].allowEditing = false;
                                }
                                if (columns[a].dataField == "ID" || columns[a].dataField == "PRODUCT_GROUP" || columns[a].dataField == "MARKET_ID" || columns[a].dataField == "FABRIC_TYPE" || columns[a].dataField == "ROW_ID") {
                                    columns[a].visible = false;
                                }
                                else if (columns[a].dataField == "MARKET") {
                                    columns[a].width = 100;
                                }
                                else if (columns[a].dataField == "DEADLINE" ||columns[a].dataField == "SHIPMENT_DATE") {
                                    columns[a].width = 100;
                                    columns[a].dataType = "date";
                                }
                                else if (columns[a].dataField == "PLANSIZ_ADET" || columns[a].dataField == "URETIM_ADET" || columns[a].dataField == "PLANLANAN_ADET") {
                                    columns[a].width = 130;
                                    columns[a].dataType = "number";
                                }
                                if (columns[a].dataField == "PLANLANAN_ADET") {
                                    columns[a].calculateCellValue = function (rowData) {
                                        var top = 0;
                                        for (var m = 0; m < COLUMNNAMES.length; m++) {
                                            if (rowData[COLUMNNAMES[m].NAME])
                                                top += rowData[COLUMNNAMES[m].NAME];
                                        }
                                        rowData.PLANLANAN_ADET = parseFloat(top);
                                        return rowData.PLANLANAN_ADET;
                                    }
                                }
                                if (columns[a].dataField == "PLANSIZ_ADET") {
                                    columns[a].calculateCellValue = function (rowData) {
                                        rowData.PLANSIZ_ADET = parseFloat(rowData.URETIM_ADET) - parseFloat(rowData.PLANLANAN_ADET);
                                        return rowData.PLANSIZ_ADET;
                                    }
                                }
                                try {
                                    if (columns[a].dataField.startsWith(YEARS[i].YEAR)) {
                                        columns[a].summary = {
                                            totalItems: [{
                                                column: "2021",
                                                summaryType: "sum",
                                                alignment: "center",
                                                displayFormat: "TOP: {0}"
                                            }]
                                        };
                                        columns[a].ownerBand = columns.length - 1;
                                        columns[a].dataType = "number";
                                        columns[a].allowFiltering = false;
                                        columns[a].caption = columns[a].dataField.replace(YEARS[i].YEAR + '_', '') + ".HAFTA";


                                    } else {

                                    }
                                } catch (e) {

                                }
                            }
                        }
                    },
                    onRowUpdating: function (e) {
                        var package = {
                            new: null, old:null
                        };
                        package.newValue = e.newData;
                        package.oldValue = e.oldData;
                        var d = $.Deferred();
                        var settings = {
                            "async": false,
                            "url": "@Url.Action("UpdateTask", "UretimPlan")",
                            "method": "POST",
                            "timeout": 0,
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "data": JSON.stringify(package),
                        };
                        $.ajax(settings).done(function (response) {
                            try {
                                var parsedIncome = response;
                                if (parsedIncome.isOK) {
                                    d.resolve();
                                } else {
                                    d.reject(parsedIncome.errorText);
                                }
                            } catch (e) {

                                d.reject("İşlem hatası :" + e.message);
                            }

                        }).fail(function (jqXHR, textStatus) {
                            d.reject("Kayıt Hatası : " + textStatus);
                        });
                        e.cancel = d.promise();
                    },onCellPrepared : function(e){
                        if(e.column.dataField=="CREATE_MINUTE"){
                            if(e.data){
                            if(e.data.CREATE_MINUTE==0){
                                e.cellElement[0].bgColor="indianred";
                            }}
                        }
                         if(e.column.dataField=="PLANSIZ_ADET"){
                            if(e.data){
                            if(e.data.PLANSIZ_ADET>0){
                                e.cellElement[0].bgColor="indianred";
                            }}
                        }
                        
                    },
                    focusedRowEnabled: true,
                    focusedRowIndex: 0,
                    focusedColumnIndex: 0 ,
                    showColumnLines: true,
                    showRowLines: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    onContentReady: function (e) {
                    },
                    onCellDblClick: function (e) {
                      if(@sCanEditPlan){
                        var ok=false;
                        console.log(YEARS);
                        for(var i =0;i<YEARS.length;i++){
                            console.log(e);
                            if(e.column.name.startsWith(YEARS[i].YEAR))
                                ok=true;
                        }
                        if(ok){
                            e.component.cellValue(e.rowIndex, e.columnIndex, e.data["PLANSIZ_ADET"]);
                            e.component.saveEditData();
                        }
                      }
                    

                    },
                    columnMinWidth: 80,
                    showBorders: true,
                }).dxDataGrid("instance"); } catch (e) { }
                    }

                };

                $("#popupDetay").dxPopup(popupOptions).dxPopup("instance").show(); 


            }
            , beforeSend: function () { 
            }


        }).always(function () {
            getLoadPanelInstance().hide();
        });
        }else if(SERIES_NAME =="KAPASİTE"){
              $.ajax({
            type: "POST",
            url: '@Url.Action("_PartialGeKapasiteListByChart", "UretimPlan")',
            data: data,
            contentType: 'application/x-www-form-urlencoded',
            async: true,
            success: function (income, status, xmlRequest) {
                var formData = JSON.parse(income);

                var popupOptions = {
                    contentTemplate: function () {
                        return  "<div id='edReport' style='height:calc(100vh - 100px)'></div>";
                    },
                    width: function () { return "900px"; },
                    height: function () { return "calc(100% - 300px)"; },
                    showTitle: true,
                    title: GetYear()+" - "+WEEK_VALUE +". HAFTA YÜKLEME DETAY",
                    dragEnabled: true,
                    closeOnOutsideClick: true,
                    onContentReady: function () {
                        try { 
                            $("#edReport").dxDataGrid({
                            dataSource: formData,
                            keyExpr: "ROW_ID",
                            loadPanel: {
                                enabled: true
                            },columnChooser: {
                                enabled: true
                            }, export: {
                                enabled: true
                            },
                            remoteOperations: false,
                            columns:[
                               {
                                    dataField:"MODEL",
                                    caption:"MODEL"
                               },
                               {
                                    dataField:"WEEK",
                                    caption:"HAFTA"
                               },
                               {
                                    dataField:"YEAR",
                                    caption:"YIL"
                               },
                               {
                                    dataField:"QUANTITY",
                                    caption:"PLAN TOPLAM"
                               },
                               {
                                    dataField:"SURE",
                                    caption:"ÜRÜN YAPILIŞ SÜRESİ"
                               },
                               {
                                    dataField:"KISI",
                                    caption:"BANT KİŞİ SAYISI"
                               },
                               {
                                    dataField:"WORK_TIME",
                                    caption:"BANT ÇALIŞMA SÜRESİ"
                               },
                               {
                                    dataField:"EXPECTED_QUANTITY",
                                    caption:"BEKLENEN ÜRETİM KAPASİTESİ"
                               }

                            ],
                            height:"100%",
                            paging: {
                                pageSize: 10
                            },
                            sorting: {
                                mode: "multiple"
                            },summary: {
                              totalItems: [{
                                column: 'EXPECTED_QUANTITY',
                                summaryType: 'sum',
                                displayFormat: '{0}'
                              },
                              {
                                column: 'WORK_TIME',
                                summaryType: 'sum',
                                displayFormat: '{0}'
                              },
                              {
                                column: 'KISI',
                                summaryType: 'sum',
                                displayFormat: '{0}'
                              }],
                            },
                            pager: {
                              visible: true,
                              allowedPageSizes: [5, 10, 'all'],
                              showPageSizeSelector: true,
                              showInfo: true,
                              showNavigationButtons: true,
                            },
                            filterRow: {
                                visible: true,
                                applyFilter: "auto"
                            },
                            headerFilter: { visible: true },
                            focusedRowEnabled: true,
                            focusedRowIndex: 0,
                            focusedColumnIndex: 0 ,
                            showColumnLines: true,
                            showRowLines: true,
                            rowAlternationEnabled: true,
                            showBorders: true,
                            columnMinWidth: 80,
                            showBorders: true,
                        }).dxDataGrid("instance"); 
                } catch (e) { }
                    }

                };

                $("#popupDetay").dxPopup(popupOptions).dxPopup("instance").show(); 


            }
            , beforeSend: function () { 
            }


        }).always(function () {
            getLoadPanelInstance().hide();
        });
        }
       
    }
</script>