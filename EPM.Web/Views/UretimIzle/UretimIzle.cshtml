
@{
    ViewData["Title"] = "UretimIzle";
}
<style>
    #dateBoxProduct{
        margin:auto;
    }
    .productDetailCardHeader {
        font-weight: bold;
        font-size: 24px;
        justify-content: center;
        text-align: center;
        padding-top: 5px;
        padding-bottom: 10px;
    }

    .detailItemEx {
        width: 49%;
        text-align: left;
        display: inline-block;
        font-size: 13px;
    }
    .detailItemValue {
        width: 49%;
        text-align: center;
        display: inline-block;
        font-size: 13px; 
        font-weight:bold;
    }
</style>


<div id="form-container">
    <div class="dx-card wide-card">
        @(Html.DevExtreme().Form<EPM.Production.Monitoring.Dto.Models.FilterModel>()
        .ID("edOnayliListe").ShowValidationSummary(true)
        .Items(items =>
        {
            items.AddGroup().ColCount(8).Items(groupItems =>
            {
                groupItems.AddSimpleFor(m => m.BRAND).Editor(ob => ob.Lookup().DataSource(d => d.Mvc().LoadParams(new { all = true }).Controller("Uretim").LoadAction("GetBrandList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID")).IsRequired(false);
                groupItems.AddSimpleFor(m => m.SEASON).Editor(ob => ob.Lookup().DataSource(d => d.Mvc().LoadParams(new { all = true }).Controller("Uretim").LoadAction("GetSeasonList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID")).IsRequired(false);
                groupItems.AddSimpleFor(m => m.MODEL).Editor(ob => ob.TextBox().ID("edModel")).IsRequired(false);
                groupItems.AddSimpleFor(m => m.COLOR).Editor(ob => ob.TextBox().ID("edColor")).IsRequired(false);
                groupItems.AddSimpleFor(m => m.ORDER_TYPE).Editor(ob => ob.Lookup().DataSource(d => d.Mvc().LoadParams(new { all = true }).Controller("Uretim").LoadAction("GetOrderList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID")).IsRequired(false);
                groupItems.AddSimpleFor(m => m.PRODUCT_GROUP).Editor(ob => ob.Lookup().DataSource(d => d.Mvc().LoadParams(new { all = true }).Controller("Uretim").LoadAction("GetProductGroupList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID")).IsRequired(false);
                groupItems.AddSimpleFor(m => m.BAND).Editor(ob => ob.Lookup().DataSource(d => d.Mvc().LoadParams(new { all = true }).Controller("Uretim").LoadAction("GetBandList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID")).IsRequired(false);
                groupItems.AddButton().HorizontalAlignment(HorizontalAlignment.Left).VerticalAlignment(VerticalAlignment.Center)
                  .ButtonOptions(b => b.Text("FİLTRELE")
                      .Type(ButtonType.Default)
                      .Icon("fas fa-sign-in-alt")
                      .Width("100%")
                      .OnClick("UretimIzleFilter")
                      .UseSubmitBehavior(true)
              );

            });



        })
        .FormData(Model).ShowValidationSummary(false)
    )


        <div id="popupDetay"></div>
    </div>

    <div class="dx-card wide-card" style="width: 100%; height: calc(100vh - 135px); ">
        <div class="dx-card wide-card" id="weekDetailCard" style="width:225px;height:100%;display:inline-block;margin:0 2px">
            <div id="weekDetail"></div>
        </div>
        <div class="dx-card wide-card" id="productDetailCard" style="width: 200px; height: 100%; display: inline-block; margin: 0 2px">
            <div id="productDetail"></div>
        </div>
        <div class="dx-card wide-card" style="width: calc(100% - 485px); height: 100%; display: inline-block; ">
            <div class="dx-card wide-card" id="productPlan" style="width: 49%; height: 200px; display: inline-block; margin: 0 2px">

            </div>
            <div class="dx-card wide-card" id="productBar" style="width: 49%; height: 200px; display: inline-block; margin: 0 2px">

            </div>
            <div class="dx-card wide-card" id="productDate" style="width: 100%; display: inline-block; margin: 0 2px">
                @(Html.DevExtreme().Calendar()
            .ID("dateBoxProduct")
            .Value(DateTime.Now)
            .Disabled(false)
            .ZoomLevel(CalendarZoomLevel.Month)
            .OnValueChanged("dateBoxProduct_valueChanged")
        )
            </div>
            <div class="dx-card wide-card" id="productDetailValues" style="width: 100%; height: 150px; display: inline-block; margin: 0 2px">
                <div class="dx-card wide-card" id="productKesim" style="width: 24.4%; height: 200px; display: inline-block; margin: 0 2px">
                    <div class="productDetailCardHeader">KESİM</div>
                    <div style="padding:5px 15px">
                        <div class="detailItemEx">HAFTALIK</div>
                        <div id="hfKesim" class="detailItemValue">0</div>
                    </div>
                    <div style="padding:5px 15px">
                        <div class="detailItemEx">TARİH</div>
                        <div id="trKesim" class="detailItemValue">0</div>
                    </div>
                </div>
                <div class="dx-card wide-card" id="productTasnif" style="width: 24.4%; height: 200px; display: inline-block; margin: 0 2px">
                    <div class="productDetailCardHeader">TASNİF</div>
                    <div style="padding:5px 15px">
                        <div class="detailItemEx">HAFTALIK</div>
                        <div id="hfTasnif" class="detailItemValue">0</div>
                    </div>
                    <div style="padding:5px 15px">
                        <div class="detailItemEx">TARİH</div>
                        <div id="trTasnif" class="detailItemValue">0</div>
                    </div>
                </div>
                <div class="dx-card wide-card" id="productBant" style="width: 24.4%; height: 200px; display: inline-block; margin: 0 2px">
                    <div class="productDetailCardHeader">BANT</div>
                    <div style="padding:5px 15px">
                        <div class="detailItemEx">HAFTALIK</div>
                        <div id="hfBant" class="detailItemValue">0</div>
                    </div>
                    <div style="padding:5px 15px">
                        <div class="detailItemEx">TARİH</div>
                        <div id="trBant" class="detailItemValue">0</div>
                    </div>
                </div>
                <div class="dx-card wide-card" id="productKalite" style="width: 24.4%; height: 200px; display: inline-block; margin: 0 2px">
                    <div class="productDetailCardHeader">KALİTE</div>
                    <div style="padding:5px 15px">
                        <div class="detailItemEx">HAFTALIK</div>
                        <div id="hfKalite" class="detailItemValue">0</div>
                    </div>
                    <div style="padding:5px 15px">
                        <div class="detailItemEx">TARİH</div>
                        <div id="trKalite"  class="detailItemValue">0</div>
                    </div>
                </div>
            </div>
        </div>
    </div>



</div>


<script>
    var weekDetail, productDetail;
    function ClearChart() {
        try { $("#productBar").dxChart("instance").option("dataSource", null); } catch (e) { }
        try { $("#productPlan").dxDataGrid("instance").option("dataSource", null); } catch (e) { }
    }
    function ClearGrid() {
        $("#productBar").dxChart("instance").option("dataSource", null);
    }
    function ClearBottom() {
        $("#hfKesim").html(0);
        $("#hfTasnif").html(0);
        $("#hfBant").html(0);
        $("#hfKalite").html(0);
    }
    function ClearRealTime() {
        $("#trKesim").html(0);
        $("#trTasnif").html(0);
        $("#trBant").html(0);
        $("#trKalite").html(0);
    }
    function UretimIzleFilter() {
        ClearChart();
        ClearBottom();
        try { $("#weekDetail").dxList("instance").option("dataSource", null); } catch (e) { }
        try { $("#productDetail").dxList("instance").option("dataSource", null); } catch (e) { }
        var data = {
            BRAND: jQuery("[name=BRAND]").val(),
            SEASON: jQuery("[name=SEASON]").val(),
            BAND: jQuery("[name=BAND]").val(),
            MODEL: jQuery("[name=MODEL]").val(),
            COLOR: jQuery("[name=COLOR]").val(),
            ORDER_TYPE: jQuery("[name=ORDER_TYPE]").val(),
            PRODUCT_GROUP: jQuery("[name=PRODUCT_GROUP]").val()
        };
        $.ajax({
            type: "POST",
            url: '@Url.Action("UretimIzleFilter", "UretimIzle")',
            data: data,
            contentType: 'application/x-www-form-urlencoded',
            timeout: 180000,
            success: function (income, status, xmlRequest) {

                weekDetail= $("#weekDetail").dxList({
                    dataSource: new DevExpress.data.DataSource({
                        store: new DevExpress.data.ArrayStore({
                            key: "ID",
                            data: income
                        }),
                        paginate: false
                    }),
                    height: "100%",
                    itemTemplate: function (data) {
                        var html = "<div style='text-align:center;padding-right:15px;'> <span style='font-weight:bold;font-size:11px'>" + data.WEEK + ". Hafta </span><br> <span style='font-weight:bold;color:indianred'>  (" + moment(data.START_DATE).format("DD.MM.YYYY") + " - " + moment(data.END_DATE).format("DD.MM.YYYY") + ")</span></div>";
                        return html;
                    },
                    showSelectionControls: true,
                    selectionMode: "all",
                    pageLoadMode: "scrollBottom",
                    onSelectionChanged: function (data) {
                        haftaModel = weekDetail.dxList("instance").option("selectedItems");
                        try { $("#productDetail").dxList("instance").option("dataSource", null); } catch (e) { }
                        GetProductDetail();
                    }
                });

            }, beforeSend: function () {
                getLoadPanelInstance().show();
            }


        }).always(function () {
            getLoadPanelInstance().hide();
        });
    }

    var haftaModel = null;
    var productModel = null;
    function GetProductDetail() {
        ClearChart();
        ClearBottom();

        if (haftaModel == null || haftaModel.length == 0)
            return;
        data = {
            model: haftaModel,
            filterModel: {
                BRAND: jQuery("[name=BRAND]").val(),
                SEASON: jQuery("[name=SEASON]").val(),
                BAND: jQuery("[name=BAND]").val(),
                MODEL: jQuery("[name=MODEL]").val(),
                COLOR: jQuery("[name=COLOR]").val(),
                ORDER_TYPE: jQuery("[name=ORDER_TYPE]").val(),
                PRODUCT_GROUP: jQuery("[name=PRODUCT_GROUP]").val()
            }
        }
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetProductList", "UretimIzle")',
            data: data,
            contentType: 'application/x-www-form-urlencoded',
            timeout: 180000,
            success: function (income, status, xmlRequest) {
                productDetail = $("#productDetail").dxList({
                    dataSource: new DevExpress.data.DataSource({
                        store: new DevExpress.data.ArrayStore({
                            key: "ID",
                            data: income
                        }),
                        paginate: false
                    }),
                    height: "100%",
                    //searchEnabled: true,
                    searchExpr: "MODEL",
                    itemTemplate: function (data) {
                        var html = "<div> <span style='font-weight:bold;'>" + data.MODEL + "</span>.<span style='font-weight:bold'>" + data.COLOR + "</span></div>";
                        return html;
                    },
                    showSelectionControls: true,
                    //pageLoadMode: "scrollBottom",
                    selectionMode: "all",
                    onSelectionChanged: function (data) {
                        productModel = productDetail.dxList("instance").option("selectedItems");
                        GetProductionDetails();
                    }
                });

            }, beforeSend: function () {
                getLoadPanelInstance().show();
            }


        }).always(function () {
            getLoadPanelInstance().hide();
        });
    }

    function TarihFiltrele(TarihDeger) {
        ClearRealTime();
        if (haftaModel == null || haftaModel.length == 0)
            return;
        if (productModel == null || productModel.length == 0)
            return;
         var data = {
            haftaModel: haftaModel,
            productModel: productModel,
            filterModel: {
                BRAND: jQuery("[name=BRAND]").val(),
                SEASON: jQuery("[name=SEASON]").val(),
                BAND: jQuery("[name=BAND]").val(),
                MODEL: jQuery("[name=MODEL]").val(),
                COLOR: jQuery("[name=COLOR]").val(),
                ORDER_TYPE: jQuery("[name=ORDER_TYPE]").val(),
                PRODUCT_GROUP: jQuery("[name=PRODUCT_GROUP]").val()
             },
             Tarih: TarihDeger
        }
          $.ajax({
            type: "POST",
            url: '@Url.Action("GetProductionDetailsByDate", "UretimIzle")',
              data: JSON.stringify(data),
              contentType: 'application/json',
            timeout: 180000,
            success: function (income, status, xmlRequest) {

                $("#trKesim").html(income.KESIM);
                $("#trTasnif").html(income.TASNIF);
                $("#trBant").html(income.BANT);
                $("#trKalite").html(income.KALITE);

            }, beforeSend: function () {
                getLoadPanelInstance().show();
            }


        }).always(function () {
            getLoadPanelInstance().hide();
        });
    }
    function dateBoxProduct_valueChanged(data) {

        TarihFiltrele(moment(data.value).format("DD.MM.YYYY"));

    }
    function GetProductionDetails() {
        ClearChart();
        ClearBottom();
        if (haftaModel == null || haftaModel.length == 0)
            return;
        if (productModel == null || productModel.length == 0)
            return;

        data = {
            haftaModel: haftaModel,
            productModel: productModel,
            filterModel: {
                BRAND: jQuery("[name=BRAND]").val(),
                SEASON: jQuery("[name=SEASON]").val(),
                BAND: jQuery("[name=BAND]").val(),
                MODEL: jQuery("[name=MODEL]").val(),
                COLOR: jQuery("[name=COLOR]").val(),
                ORDER_TYPE: jQuery("[name=ORDER_TYPE]").val(),
                PRODUCT_GROUP: jQuery("[name=PRODUCT_GROUP]").val()
            }
        }
        console.log(data);
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetProductionDetails", "UretimIzle")',
            data: JSON.stringify( data),
            contentType: 'application/json',
            timeout: 180000,
            success: function (income, status, xmlRequest) {
                var totalPLAN = 0;
                var totalORDER = 0;
                for (var i = 0; i < income.Item1.length; i++) {
                    totalORDER += income.Item1[i].ORDER_QUANTITY;
                    totalPLAN += income.Item1[i].QUANTITY;
                }
                var bar = [{
                    arg: "SİPARİŞ",
                    val: totalORDER
                }, {
                    arg: "HAFTALIK PLAN",
                    val: totalPLAN
                }, {
                    arg: "KESİM",
                    val: income.Item2.KESIM
                }, {
                    arg: "TASNİF",
                    val: income.Item2.TASNIF
                }, {
                    arg: "BANT",
                    val: income.Item2.BANT
                }, {
                    arg: "KALİTE",
                    val: income.Item2.KALITE
                    }];
                $("#productBar").dxChart({
                    dataSource: bar,
                    legend: {
                        visible: false
                    },
                    series: {
                        type: "bar"
                    }, tooltip: {
                        enabled: true
                    },
                    argumentAxis: {
                        tickInterval: 5,
                        label: {
                            format: {
                                type: "decimal"
                            }
                        }
                    },
                    title: "Üretim Durumu"
                });
                $("#hfKesim").html(income.Item2.KESIM);
                $("#hfTasnif").html(income.Item2.TASNIF);
                $("#hfBant").html(income.Item2.BANT);
                $("#hfKalite").html(income.Item2.KALITE);
                $("#productPlan").dxDataGrid({
                    dataSource: income.Item1,
                    keyExpr: 'ID',
                    selection: {
                        mode: "single"
                    },
                    hoverStateEnabled: true,
                    showBorders: true,
                    columns: ["MARKET_NAME", "QUANTITY", "ORDER_QUANTITY"],
                    showBorders: true,
                    summary: {
                        totalItems: [{
                            column: "QUANTITY",
                            summaryType: "sum"
                        }, {
                            column: "ORDER_QUANTITY",
                                summaryType: "sum"
                            }]
                    }
                });

                TarihFiltrele(moment($("#dateBoxProduct").dxCalendar("instance").option("value")).format("DD.MM.YYYY"));
            }, beforeSend: function () {
                getLoadPanelInstance().show();
            }


        }).always(function () {
            getLoadPanelInstance().hide();
        });
    }


</script>
