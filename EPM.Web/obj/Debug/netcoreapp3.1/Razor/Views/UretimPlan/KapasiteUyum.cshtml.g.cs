#pragma checksum "D:\Projects\Eren Production Management\EPM.Web\Views\UretimPlan\KapasiteUyum.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e53253c27c13940f66b21a9885e7d5d49ae94352"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(EPM_Web.Models.UretimPlan.Views_UretimPlan_KapasiteUyum), @"mvc.1.0.view", @"/Views/UretimPlan/KapasiteUyum.cshtml")]
namespace EPM_Web.Models.UretimPlan
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Projects\Eren Production Management\EPM.Web\Views\_ViewImports.cshtml"
using EPM_Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Projects\Eren Production Management\EPM.Web\Views\_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e53253c27c13940f66b21a9885e7d5d49ae94352", @"/Views/UretimPlan/KapasiteUyum.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"63f34ed16a806b7cdcb157e2caccd86ef5edb5c0", @"/Views/_ViewImports.cshtml")]
    public class Views_UretimPlan_KapasiteUyum : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n\r\n<div id=\"form-container\">\r\n    ");
#nullable restore
#line 4 "D:\Projects\Eren Production Management\EPM.Web\Views\UretimPlan\KapasiteUyum.cshtml"
Write(Html.Partial("_PartialKapasitePlanUyum"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
    
        <div id=""popupDetay""></div>
</div>
<div id=""form-container"">
    <div class=""dx-card wide-card"">
        <div id=""edReport"" style=""height:calc(100vh - 525px)"">
        </div>
    </div>
</div>
<script>
    function GetYear() { 
        return jQuery(""[name=edYear]"").val();
    }

    function GetGroup() { 
        return jQuery(""[name=edProductGroup]"").val();
    }
    var datax = null;
    function Chart_Clicked(WEEK_VALUE) {
        var data = {
            BAND: GetGroup(),
            YEAR: GetYear,
            WEEK: WEEK_VALUE 
        };
        getLoadPanelInstance().show();
        $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 32 "D:\Projects\Eren Production Management\EPM.Web\Views\UretimPlan\KapasiteUyum.cshtml"
             Write(Url.Action("_PartialGetPlanListByChart", "UretimPlan"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: data,
            contentType: 'application/x-www-form-urlencoded',
            async: true,
            success: function (income, status, xmlRequest) {
                var formData = JSON.parse(income).DATA;
                var YEARS = JSON.parse(income).YEARS;
                var COLUMNNAMES = JSON.parse(income).COLUMNNAMES;

                var popupOptions = {
                    contentTemplate: function () {
                      
                        return  ""<div id='edReport2' style='height:calc(100vh - 525px)'></div>"";
                    },
                    width: function () { return ""calc(100% - 20px)""; },
                    height: function () { return ""calc(100% - 20px)""; },
                    showTitle: true,
                    title: tit,
                    dragEnabled: true,
                    closeOnOutsideClick: true,
                    onContentReady: function () {
                        try { (""#edReport2"").dxDataGrid({
           ");
            WriteLiteral(@"         dataSource: formData,
                    keyExpr: ""ROW_ID"",
                    loadPanel: {
                        enabled: true
                    },
                    remoteOperations: false
                    
                    ,paging: {
                        pageSize: 20
                    },
                    sorting: {
                        mode: ""multiple""
                    },
                    filterRow: {
                        visible: true,
                        applyFilter: ""auto""
                    },
                    headerFilter: { visible: true },
                    editing: {
                        mode: ""cell"",
                        allowUpdating: true
                    } , customizeColumns: function (columns) {
                        for (var i = 0; i < YEARS.length; i++) {
                            columns.push({
                                caption: YEARS[i].YEAR,
                                isBand: true
      ");
            WriteLiteral(@"                      });

                            for (var a = 0; a < columns.length - 1; a++) {
                                if (a < 16) {
                                    columns[a].fixed = true;
                                    columns[a].allowEditing = false;
                                }
                                if (columns[a].dataField == ""ID"" || columns[a].dataField == ""PRODUCT_GROUP"" || columns[a].dataField == ""MARKET_ID"" || columns[a].dataField == ""FABRIC_TYPE"" || columns[a].dataField == ""ROW_ID"") {
                                    columns[a].visible = false;
                                }
                                else if (columns[a].dataField == ""MARKET"") {
                                    columns[a].width = 100;
                                }
                                else if (columns[a].dataField == ""DEADLINE"") {
                                    columns[a].width = 100;
                                    columns[a].dataType = ""dat");
            WriteLiteral(@"e"";
                                }
                                else if (columns[a].dataField == ""PLANSIZ_ADET"" || columns[a].dataField == ""URETIM_ADET"" || columns[a].dataField == ""PLANLANAN_ADET"") {
                                    columns[a].width = 130;
                                    columns[a].dataType = ""number"";
                                }
                                if (columns[a].dataField == ""PLANLANAN_ADET"") {
                                    columns[a].calculateCellValue = function (rowData) {
                                        var top = 0;
                                        for (var m = 0; m < COLUMNNAMES.length; m++) {
                                            if (rowData[COLUMNNAMES[m].NAME])
                                                top += rowData[COLUMNNAMES[m].NAME];
                                        }
                                        rowData.PLANLANAN_ADET = parseFloat(top);
                                        return");
            WriteLiteral(@" rowData.PLANLANAN_ADET;
                                    }
                                }
                                if (columns[a].dataField == ""PLANSIZ_ADET"") {
                                    columns[a].calculateCellValue = function (rowData) {
                                        rowData.PLANSIZ_ADET = rowData.URETIM_ADET - rowData.PLANLANAN_ADET;
                                        return rowData.PLANSIZ_ADET;
                                    }
                                }
                                try {
                                    if (columns[a].dataField.startsWith(YEARS[i].YEAR)) {
                                        columns[a].summary = {
                                            totalItems: [{
                                                column: ""2021"",
                                                summaryType: ""sum"",
                                                alignment: ""center"",
                                           ");
            WriteLiteral(@"     displayFormat: ""TOP: {0}""
                                            }]
                                        };
                                        columns[a].ownerBand = columns.length - 1;
                                        columns[a].dataType = ""number"";
                                        columns[a].allowFiltering = false;
                                        columns[a].caption = columns[a].dataField.replace(YEARS[i].YEAR + '_', '') + "".HAFTA"";


                                    } else {

                                    }
                                } catch (e) {

                                }
                            }
                        }
                    },
                    onRowUpdating: function (e) {
                        var package = {
                            new: null, old:null
                        };
                        package.newValue = e.newData;
                        package.oldValue = e.oldData;
   ");
            WriteLiteral("                     var d = $.Deferred();\r\n                        var settings = {\r\n                            \"async\": false,\r\n                            \"url\": \"");
#nullable restore
#line 152 "D:\Projects\Eren Production Management\EPM.Web\Views\UretimPlan\KapasiteUyum.cshtml"
                               Write(Url.Action("UpdateTask", "UretimPlan"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            ""method"": ""POST"",
                            ""timeout"": 0,
                            ""headers"": {
                                ""Content-Type"": ""application/json""
                            },
                            ""data"": JSON.stringify(package),
                        };
                        $.ajax(settings).done(function (response) {
                            try {
                                var parsedIncome = response;
                                if (parsedIncome.isOK) {
                                    d.resolve();
                                } else {
                                    d.reject(parsedIncome.errorText);
                                }
                            } catch (e) {

                                d.reject(""İşlem hatası :"" + e.message);
                            }

                        }).fail(function (jqXHR, textStatus) {
                            d.reject(""Kayıt Hatası : "" + text");
            WriteLiteral(@"Status);
                        });
                        e.cancel = d.promise();
                    },
                    focusedRowEnabled: true,
                    focusedRowIndex: 0,
                    focusedColumnIndex: 0 ,
                    showColumnLines: true,
                    showRowLines: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    onContentReady: function (e) {
                    },
                    onCellDblClick: function (e) {
                        e.component.cellValue(e.rowIndex, e.columnIndex, e.data[""PLANSIZ_ADET""]);
                        e.component.saveEditData();

                    },
                    columnMinWidth: 80,
                    showBorders: true,
                }).dxDataGrid(""instance""); } catch (e) { }
                    }

                };

                $(""#popupDetay"").dxPopup(popupOptions).dxPopup(""instance"").show();
                $


    ");
            WriteLiteral("        }\r\n            , beforeSend: function () { \r\n            }\r\n\r\n\r\n        }).always(function () {\r\n            getLoadPanelInstance().hide();\r\n        });\r\n    }\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
