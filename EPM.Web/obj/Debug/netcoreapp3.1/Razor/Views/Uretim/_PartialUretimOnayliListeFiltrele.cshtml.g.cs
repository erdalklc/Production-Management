#pragma checksum "D:\GitProjects\Eren-Production-Management\EPM.Web\Views\Uretim\_PartialUretimOnayliListeFiltrele.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b71fccece22e66742798b0e9dbb0ef49f65ea09d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(EPM_Web.Models.Uretim.Views_Uretim__PartialUretimOnayliListeFiltrele), @"mvc.1.0.view", @"/Views/Uretim/_PartialUretimOnayliListeFiltrele.cshtml")]
namespace EPM_Web.Models.Uretim
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\GitProjects\Eren-Production-Management\EPM.Web\Views\_ViewImports.cshtml"
using EPM_Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\GitProjects\Eren-Production-Management\EPM.Web\Views\_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\GitProjects\Eren-Production-Management\EPM.Web\Views\Uretim\_PartialUretimOnayliListeFiltrele.cshtml"
using EPM.Dto.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b71fccece22e66742798b0e9dbb0ef49f65ea09d", @"/Views/Uretim/_PartialUretimOnayliListeFiltrele.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"63f34ed16a806b7cdcb157e2caccd86ef5edb5c0", @"/Views/_ViewImports.cshtml")]
    public class Views_Uretim__PartialUretimOnayliListeFiltrele : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Tuple<List<EPM.Production.Dto.Production.MasterList>, EPM.Production.Dto.Production.UretimOnayliListe>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 4 "D:\GitProjects\Eren-Production-Management\EPM.Web\Views\Uretim\_PartialUretimOnayliListeFiltrele.cshtml"
  
    var editable = Convert.ToBoolean(ViewData["CanEditUretim"]);
    var onayDegistirir = Convert.ToBoolean(ViewData["OnayliKullanici"]); 


#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<div class=\"dx-card wide-card\">\r\n    ");
#nullable restore
#line 12 "D:\GitProjects\Eren-Production-Management\EPM.Web\Views\Uretim\_PartialUretimOnayliListeFiltrele.cshtml"
Write(Html.DevExtreme().DataGrid<EPM.Production.Dto.Production.MasterList>().ID("edgridHeader")
                    .ShowBorders(false)
                    .DataSource(Model.Item1,"ID" )
                    .OnExporting("exportingHeader")
                    .Export(e =>
                    {
                        e.Enabled(true);
                    })
                    .DataSourceOptions(ob=>ob.ReshapeOnPush(false))
     .OnRowUpdating("UpdateMasterRow")
     .OnRowInserting("InsertingMasterRow")
     //.OnRowInserted("InsertedMasterRow")
    .FocusedRowEnabled(true)
    .FilterRow(x=>x.Visible(true))
    .FocusedRowIndex(0)
    .Selection(s => s.Mode(SelectionMode.Single))
    .ColumnAutoWidth(true)
    .ShowBorders(true)
    .HeaderFilter(x=>x.Visible(true))
    .Editing(ob => ob.Mode(GridEditMode.Popup).StartEditAction(GridStartEditAction.DblClick).AllowUpdating(editable).AllowDeleting(editable).AllowAdding(editable)
    .Popup(p => p
                .Title("SİPARİŞ BİLGİSİ")
                .ShowTitle(true)
                .Width(1000)
                .Height(800)
            )
            .Form(f=>f.Items(items=>{
                items.AddGroup()
                .ColCount(5)
                .ColSpan(2)
                .Caption("ÜRÜN BİLGİLERİ")
                .Items(groupItems=>
                {
                    groupItems.AddSimpleFor(m => m.SEASON).Label(lb=>lb.Text("SEZON")).Editor(ob => ob.Lookup().SearchEnabled(true).DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetSeasonList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID")).IsRequired(true);
                    groupItems.AddSimpleFor(m => m.BRAND).Label(lb => lb.Text("MARKA")).Editor(ob => ob.Lookup().SearchEnabled(true).DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetBrandList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID")).IsRequired(true);
                    groupItems.AddSimpleFor(m => m.SUB_BRAND).Label(lb => lb.Text("ALT MARKA")).Editor(ob => ob.Lookup().SearchEnabled(true).DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetSubBrandList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID")).IsRequired(true);
                    groupItems.AddSimpleFor(m => m.MODEL).Label(lb => lb.Text("MODEL")).Editor(ob => ob.TextBox().ID("edModel")).IsRequired(true);
                    groupItems.AddSimpleFor(m => m.COLOR).Label(lb => lb.Text("RENK")).Editor(ob => ob.TextBox().ID("edColor")).IsRequired(true);


                });
                items.AddGroup()
               .ColCount(4)
               .ColSpan(2)
               .Caption("SİPARİŞ DURUMLARI")
               .Items(groupItems =>
               {
                   groupItems.AddSimpleFor(m => m.STATUS).Label(lb => lb.Text("DURUM")).Editor(ob => ob.Lookup().SearchEnabled(true).DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetStatusList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID")).IsRequired(true);
                   groupItems.AddSimpleFor(m => m.APPROVAL_STATUS).Label(lb => lb.Text("ONAY DURUM")).Editor(ob => ob.Lookup().SearchEnabled(true).DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetApprovalStatusList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID")).IsRequired(true);
                   groupItems.AddSimpleFor(m => m.FLAG_ID).Label(lb => lb.Text("ÖNEM DURUMU")).Editor(ob => ob.Lookup().SearchEnabled(true).DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetFlagList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID")).IsRequired(true);


               });
                items.AddGroup()
                .ColCount(4)
                .ColSpan(2)
                .Caption("ÜRETİM BİLGİLERİ")
                .Items(groupItems=>{
                    groupItems.AddSimpleFor(m => m.ORDER_TYPE).Label(lb => lb.Text("SİPARİŞ TİPİ")).Editor(ob => ob.Lookup().SearchEnabled(true).DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetOrderList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID")).IsRequired(true);
                    groupItems.AddSimpleFor(m => m.PRODUCTION_TYPE).Label(lb => lb.Text("ÜRETİM TİPİ")).Editor(ob => ob.Lookup().SearchEnabled(true).DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetProductionTypes").Key("ID")).DisplayExpr("ADI").ValueExpr("ID")).IsRequired(true);
                    groupItems.AddSimpleFor(m => m.FABRIC_TYPE).Label(lb => lb.Text("KUMAŞ TİPİ")).Editor(ob => ob.Lookup().SearchEnabled(true).DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetFabricList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID")).IsRequired(true);
                    groupItems.AddSimpleFor(m => m.BAND_ID).Label(lb => lb.Text("ÜRETİM BANDI")).Editor(ob => ob.Lookup().SearchEnabled(true).DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetBandList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID")).IsRequired(true);
                    groupItems.AddSimpleFor(m => m.RECIPE).Label(lb => lb.Text("ÜRETİM REÇETESİ")).Editor(ob => ob.Lookup().SearchEnabled(true).DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetRecipeList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID")).IsRequired(true);
                    groupItems.AddSimpleFor(m => m.PRODUCT_GROUP).Label(lb => lb.Text("ÜRÜN GRUBU")).Editor(ob => ob.Lookup().SearchEnabled(true).DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetProductGroupList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID")).IsRequired(true);

                });
                items.AddGroup()
               .ColCount(4)
               .ColSpan(2)
               .Caption("TERMİN BİLGİLERİ")
               .Items(groupItems=>{
                   groupItems.AddSimpleFor(m => m.DEADLINE).Editor(ob => ob.DateBox()).IsRequired(false);
                   groupItems.AddSimpleFor(m => m.DEADLINE_2).Editor(ob => ob.DateBox()).IsRequired(false);
                   groupItems.AddSimpleFor(m => m.DEADLINE_3).Editor(ob => ob.DateBox()).IsRequired(false);
                   groupItems.AddSimpleFor(m => m.DEADLINE_4).Editor(ob => ob.DateBox()).IsRequired(false);

               });
                items.AddGroup()
             .ColCount(4)
             .ColSpan(2)
             .Caption("SEVKİYAT BİLGİLERİ")
             .Items(groupItems =>
             {
                 groupItems.AddSimpleFor(m => m.SHIPMENT_DATE).Label(lb => lb.Text("SEVKİYAT TARİHİ")).Editor(ob => ob.DateBox()).IsRequired(false);

             });
            }))
    )
    .ColumnResizingMode(ColumnResizingMode.Widget)
    .AllowColumnResizing(true)
    .AllowColumnReordering(true)
    //.Paging(ob=>ob.PageSize(25).Enabled(true))
    .Height("calc(100vh - 255px)")
    .ShowColumnLines(true)
    .ColumnChooser(ch => { ch.Mode(GridColumnChooserMode.Select);ch.Enabled(true); })
    .ShowColumnHeaders(true)
    .OnFocusedRowChanged("gridFocusedRowChanged")
    .Summary(
    ob=>ob.TotalItems(
        items=> {
        items.AddFor(m => m.QUANTITY).Alignment(HorizontalAlignment.Right).SummaryType(SummaryType.Sum).CustomizeText(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    WriteLiteral("function(data){return data.value}");
    PopWriter();
}
));
        items.AddFor(m => m.MODEL).Alignment(HorizontalAlignment.Right).SummaryType(SummaryType.Count).CustomizeText(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    WriteLiteral("function(data){return data.value}");
    PopWriter();
}
));
        }))
    .Columns(columns =>
    {


        columns.Add().Width(50).Type(GridCommandColumnType.Buttons).Buttons(btn =>
        {
            btn.Add().Name(GridColumnButtonName.Edit);
            btn.Add().Icon("fa fa-history").OnClick("LogSearchHeader");
        });


        columns.AddFor(m => m.ID).SortOrder(SortOrder.Asc).Width(60).AllowEditing(false);
        columns.AddFor(m => m.STATUS).Width(110).AllowEditing(onayDegistirir).Lookup(look => look.DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetStatusList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID"));
        columns.AddFor(m => m.APPROVAL_STATUS).Width(110).AllowEditing(onayDegistirir).Lookup(look => look.DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetApprovalStatusList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID"));
        columns.AddFor(m => m.FLAG_ID).Width(110).Lookup(look => look.DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetFlagList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID"));
        columns.AddFor(m => m.BRAND).Width(110).Lookup(look => look.DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetBrandList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID"));
        columns.AddFor(m => m.SUB_BRAND).Width(110).Lookup(look => look.DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetSubBrandList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID"));
        columns.AddFor(m => m.SEASON).Lookup(look => look.DataSource(d => d.Mvc().Controller("Uretim").LoadAction("GetSeasonList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID"));
        columns.AddFor(m => m.MODEL);
        columns.AddFor(m => m.COLOR);
        columns.AddFor(m => m.COLLECTION_TYPE).Lookup(look => look.DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetCollectionTypes").Key("ID")).DisplayExpr("ADI").ValueExpr("ID"));
        columns.AddFor(m => m.ROYALTY);
        columns.AddFor(m => m.TEMA);
        columns.AddFor(m => m.ANA_TEMA);
        columns.AddFor(m => m.PRODUCT_GROUP).Lookup(look => look.DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetProductGroupList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID"));
        columns.AddFor(m => m.FABRIC_TYPE).Lookup(look => look.DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetFabricList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID"));
        columns.AddFor(m => m.PRODUCTION_TYPE).Lookup(look => look.DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetProductionTypes").Key("ID")).DisplayExpr("ADI").ValueExpr("ID"));
        columns.AddFor(m => m.ORDER_TYPE).Lookup(look => look.DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetOrderList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID"));
        columns.AddFor(m => m.RECIPE).Lookup(look => look.DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetRecipeList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID"));
        columns.AddFor(m => m.BAND_ID).Lookup(look => look.DataSource(d => d.Mvc().LoadParams(new { all = false }).Controller("Uretim").LoadAction("GetBandList").Key("ID")).DisplayExpr("ADI").ValueExpr("ID"));
        columns.AddFor(m => m.DEADLINE).Caption("1. DEADLINE").DataType(GridColumnDataType.Date).Format("dd.MM.yyyy").Alignment(HorizontalAlignment.Right);
        columns.AddFor(m => m.DEADLINE_2).Caption("2. DEADLINE").DataType(GridColumnDataType.Date).Format("dd.MM.yyyy").Alignment(HorizontalAlignment.Right);
        columns.AddFor(m => m.DEADLINE_3).Caption("3. DEADLINE").Visible(true).DataType(GridColumnDataType.Date).Format("dd.MM.yyyy").Alignment(HorizontalAlignment.Right);
        columns.AddFor(m => m.DEADLINE_4).Caption("4. DEADLINE").Visible(true).DataType(GridColumnDataType.Date).Format("dd.MM.yyyy").Alignment(HorizontalAlignment.Right);
        columns.AddFor(m => m.SHIPMENT_DATE).DataType(GridColumnDataType.Date).Format("dd.MM.yyyy").Alignment(HorizontalAlignment.Right);
        columns.AddFor(m => m.BANT_WEEK);
        columns.AddFor(m => m.BANT_YEAR);
        columns.AddFor(m => m.QUANTITY);
        columns.AddFor(m => m.PLAN_QUANTITY);
        columns.AddFor(m => m.KESIM);
        columns.AddFor(m => m.TASNIF);
        columns.AddFor(m => m.KALITE);
        columns.AddFor(m => m.KALITE_GERCEKLESEN);
        columns.Add().AllowEditing(false).Width(20);;
    })
    .OnEditingStart(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    WriteLiteral(@"

    function(e){
        if(e.column){
         if(e.data.ID && e.data.ID>0){
            if(e.column.name==""DEADLINE"" && e.data.DEADLINE!=null){
                e.cancel=true;
            }
            if(e.column.name==""DEADLINE_2"" && e.data.DEADLINE_2!=null){
                e.cancel=true;
            }
            if(e.column.name==""DEADLINE_3"" && (e.data.DEADLINE_2==null || e.data.DEADLINE_3!=null)){
                e.cancel=true;
            }
            if(e.column.name==""DEADLINE_4"" && (e.data.DEADLINE_2==null || e.data.DEADLINE_3==null || e.data.DEADLINE_4!=null)){
                e.cancel=true;
            }
        }else{
             if(e.column.name==""DEADLINE_2""){
                e.cancel=true;
            }
            if(e.column.name==""DEADLINE_3""){
                e.cancel=true;
            }
            if(e.column.name==""DEADLINE_4""){
                e.cancel=true;
            }
        }
        }


    }

    ");
    PopWriter();
}
))
    .OnInitNewRow(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    WriteLiteral("\r\n    function(e){ }\r\n    ");
    PopWriter();
}
))
    .OnCellPrepared(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    WriteLiteral(@"
    function(e){
         if(e.rowType==""data"" && e.column.dataField==""FLAG_ID""){
            if(e.data.FLAG_ID==1){
                e.cellElement.css(""background-color"", ""indianred"");
                e.cellElement.css(""color"", ""white"");
            }else if(e.data.FLAG_ID==3){
                e.cellElement.css(""background-color"", ""yellow"");
            }else{

                e.cellElement.css(""background-color"", ""green"");
                e.cellElement.css(""color"", ""white"");
            }
        }
    }


    ");
    PopWriter();
}
))
    );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Tuple<List<EPM.Production.Dto.Production.MasterList>, EPM.Production.Dto.Production.UretimOnayliListe>> Html { get; private set; }
    }
}
#pragma warning restore 1591
